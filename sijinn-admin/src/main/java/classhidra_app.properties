	#----- ID application for retrieve 'config' xml
application.path=sijinn-admin
	
	#----- Folder into WebInf for retrive 'config' xml (deprecated, as default is used package config.*
#application.path.config=/config/

application.auth.action.enterpoint=*
application.auth.tag_navigation.action_excluded=
	#----- Separator for action path if one action must provide different sub execution (example: /login-connect, /login-language,...). Separator '-', action 'login', subaction: 'connect','language'. Need @Call
application.actioncall.separator=-
	#----- Initialization mode for bsController 
#application.load.resource.mode=normal
application.load.resource.mode=thread

	#----- Extention for action path (example: login.bs (if .bs), login.do (if .do), login.action (if .action)
#application.extention.do=.bs
application.extention.do=

	#----- if 'true' - enable request bsController for internal info (implicit security)  
application.debug=false

	#----- if 'true' - enable read redirect url from java package as resourse  
application.permit.redirect.resource=false


	#----- Internal Statistics aggregator
application.statistic=true
application.statistic.stacklength=100
application.statistic.provider=

	# PIN (SHA of '0000' -> encoded Base64) for reload controller configuration (deprecated) - action /resources
application.pin=Od+lUoMxjTGv5aP/Sg4yU+IEXkM=

	#----- Read classhidra*.properties from classhidra_config table
#application.config.db=classhidra_config

	#----- Simple NOT CDI & EJB
application.cdi.provider.class=false

	#----- Only CDI 
#application.cdi.provider.class=it.classhidra.plugin.provider.DependencyInjectionProvider
#application.cdi.jndi.name=java:comp/BeanManager

	#----- CDI & EJB (if java:comp.ejb/EJBContext is not retrievable)
#application.cdi.provider.class=it.classhidra.plugin.provider.DependencyInjectionProvider
#application.cdi.jndi.name=java:comp/BeanManager
#application.ejb.jndi.name=java:module/WrapperEjbContext
#application.ejb.jndi.resolvename.prefix=java:module/

	#----- CDI & EJB (java:comp.ejb/EJBContext is  retrievable)
#application.cdi.provider.class=it.classhidra.plugin.provider.DependencyInjectionProvider
#application.cdi.jndi.name=java:comp/BeanManager
#application.ejb.jndi.name=java:comp.ejb/EJBContext
#application.ejb.jndi.resolvename.prefix=java:module/

	#-----CDI/EJB Provider plugin class (ex: it.classhidra.plugin.provider.DependencyInjectionProvider, it.classhidra.plugin.provider.spring)
#application.cdi.provider.class=it.classhidra.plugin.provider.DependencyInjectionProvider
#application.cdi.provider.class=false
#application.cdi.provider.class=
#application.cdi.jndi.name=java:comp/BeanManager
#application.ejb.jndi.name=java:module/WrapperEjbContext

#application.ejb.jndi.name=java:comp.ejb/EJBContext
#application.ejb.jndi.name=java:comp.ejb3/EJBContext
#application.ejb.jndi.resolvename.prefix=java:module/


	#----- Loaders after initialization bsController
#application.init_loader.class=it.application.components.loaders.InitLoader
#application.external_loader.class=it.application.components.loaders.ExternalLoader


	#-----transformation Event AfterView: WebSphere, Tomcat, Jboss (include, forward, both)
application.transformation.event.after.elaborationmode=include
#controller, filter
application.transformation.event.after.elaborationpoint=controller
application.transformation.event.after.elaborationwrapper=it.classhidra.core.controller.wrappers.bsCharResponseWrapper

	#-----transformation Event AfterView: WebLogic 
#application.transformation.event.after.elaborationmode=both
#controller, filter
#application.transformation.event.after.elaborationpoint=filter
#application.transformation.event.after.elaborationwrapper=it.classhidra.core.controller.wrappers.bsByteArrayResponseWrapper

	#-----Scan annotations for classhidra: actions, beans, stream, tranformation 
application.annotation.scanner=
application.package.annotated=it.sijinn.admin.components
#application.package.annotated.0=examples.ejb.classhidra.framework.web.components
#application.package.annotated.1=it.classhidra.core.controller.transformations
#application.package.annotated.1=it.***

	#-----Scan annotations for Jboss 6,7 (vfs) -> application.annotation.scanner is deprecated, use application.vfs.plugin
#application.annotation.scanner=it.classhidra.plugin.was.jboss7.annotation_scanner	
#application.vfs.plugin=it.classhidra.plugin.vfs.util_vfs_classes
#application.annotation.scanner=
#application.package.annotated=application.web
#application.package.annotated.0=it.classhidra.framework.web

	#-----Scan annotations Jboss 5 (vfs old version) -> application.annotation.scanner is deprecated, use application.vfs.plugin
#application.annotation.scanner=it.classhidra.plugin.was.jboss.annotation_scanner
#application.vfs.plugin=it.classhidra.plugin.vfs.util_virtualvfs_classes
#application.annotation.scanner=
#application.package.annotated=application.web
#application.package.annotated.0=it.classhidra.framework.web

